import { useEffect, useContext } from 'react';

import useFetch from 'hooks/use-fetch';
import useLocalStorage from 'hooks/use-local-storage';
import { CurrentUserContext } from 'contexts/current-user';

const UserChecker = ({ children }) => {
  const [, setCurrentUserState] = useContext(CurrentUserContext);
  const [{ response }, doFetch] = useFetch('/user');
  const [token] = useLocalStorage('token');

  useEffect(() => {
    if (!token) {
      return setCurrentUserState((state) => ({
        ...state,
        isLogged: false
      }));
    }

    doFetch();
    setCurrentUserState((state) => ({
      ...state,
      isLoading: true
    }));
  }, [token, setCurrentUserState, doFetch]);

  useEffect(() => {
    if (!response) return;

    setCurrentUserState((state) => ({
      ...state,
      isLoading: false,
      isLogged: true,
      currentUser: response.user
    }))
  }, [response, setCurrentUserState])

  return children
}

export default UserChecker;