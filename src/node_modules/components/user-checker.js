import { useEffect, useContext } from 'react';

import useFetch from 'hooks/use-fetch';
import useLocalStorage from 'hooks/use-local-storage';
import { CurrentUserContext } from 'contexts/current-user';

const UserChecker = ({ children }) => {
  const [, dispatch] = useContext(CurrentUserContext);
  const [{ response }, doFetch] = useFetch('/user');
  const [token] = useLocalStorage('token');

  useEffect(() => {
    if (!token) {
      return dispatch({ type: 'SET_UNAUTHORIZED' });
    }

    doFetch();
    dispatch({ type: 'LOADING' });
  }, [token, dispatch, doFetch]);

  useEffect(() => {
    if (!response) return;

    dispatch({
      type: 'SET_AUTHORIZED',
      payload: response.user
    })
  }, [response, dispatch])

  return children;
}

export default UserChecker;