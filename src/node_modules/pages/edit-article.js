import React, { useState, useEffect, useContext } from 'react';
import { Redirect } from 'react-router-dom';

import ArticleForm from 'components/article-form';
import useFetch from 'hooks/use-fetch';
import { CurrentUserContext } from 'contexts/current-user';

const EditArticle = ({match}) => {
  const slug = match.params.slug;
  const apiUrl = `/articles/${slug}`;
  const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)
  const [
    {response: updateArticleResponse, error: updateArticleError},
    doUpdateArticle
  ] = useFetch(apiUrl)
  const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl)
  const [{isLogged}] = useContext(CurrentUserContext)
  const [initialValues, setInitialValues] = useState(null)

  const onSubmit = (article) => {
    doUpdateArticle({
      method: 'PUT',
      data: {
        article
      }
    })
  }

  useEffect(() => {
    doFetchArticle()
  }, [doFetchArticle])

  useEffect(() => {
    if (!fetchArticleResponse) return;

    setInitialValues({
      title: fetchArticleResponse.article.title,
      description: fetchArticleResponse.article.description,
      body: fetchArticleResponse.article.body,
      tagList: fetchArticleResponse.article.tagList
    })
  }, [fetchArticleResponse])

  useEffect(() => {
    if (!updateArticleResponse) return;
    setIsSuccessfullSubmit(true)
  }, [updateArticleResponse])

  if (!isLogged) {
    return null;
  }

  if (!isLogged) {
    return <Redirect to="/" />
  }

  if (isSuccessfullSubmit) {
    return <Redirect to={`/articles/${slug}`} />
  }

  return (
    <div>
      <ArticleForm
        onSubmit={onSubmit}
        initialValues={initialValues}
        errors={(updateArticleError && updateArticleError.errors) || {}}
      />
    </div>
  )
}

export default EditArticle;