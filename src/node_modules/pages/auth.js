import React, { useState, useEffect, useContext } from 'react';
import { Link, Redirect } from 'react-router-dom';

import useFetch from 'hooks/use-fetch';
import useLocalStorage from 'hooks/use-local-storage';
import { CurrentUserContext } from 'contexts/current-user';
import ErrorMessages from 'components/error-messages';

const Auth = ({ match }) => {
  const isLoginPage = match.path === '/login';
  const pageTitle = isLoginPage ? 'Sign In' : 'Sign Up';
  const descriptionText = isLoginPage ? 'Need an account?' : 'Have an account?';
  const descriptionLink = isLoginPage ? '/register' : '/login';
  const apiUrl = isLoginPage ? '/users/login' : '/users';

  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [username, setUsername] = useState('');
  const [isSuccessSubmit, setIsSuccessSubmit] = useState(false);
  const [{isLoading, response, error}, doFetch] = useFetch(apiUrl);
  const [value, setValue] = useLocalStorage('token');
  const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext);
console.log(currentUserState)
  useEffect(() => {
    if (!response) return;

     setValue(response.user.token);
     setIsSuccessSubmit(true);
     setCurrentUserState((prevState) => ({
       ...prevState,
       isLoading: false,
       isLogged: true,
       currentUser: response.user
     }))
  }, [response, setValue]);

  const handleSubmit = (e) => {
    e.preventDefault();

    const user = isLoginPage ? {email, password} : {username, email, password}

    doFetch({
      method: 'POST',
      data: {
        user
      }
    });
  }

  if (isSuccessSubmit) {
    return <Redirect to="/" />
  }

  return(
    <div className="auth-page">
      <div className="container page">
        <div className="row">
          <div className="col-md-6 offset-md-3 col-xs-12">
            <h1 className="text-xs-center">{pageTitle}</h1>
            <p className="text-xs-center">
              <Link to={descriptionLink}>{descriptionText}</Link>
            </p>
            <form onSubmit={handleSubmit}>
              {
                error && <ErrorMessages errorMessages={error.errors} />
              }
              <fieldset>
                {
                  !isLoginPage && (
                    <fieldset className="form-group">
                      <input
                        name="username"
                        type="text" 
                        className="form-control form-control-lg" 
                        placeholder="Username"
                        onChange={(e) => setUsername(e.target.value)}
                      />
                    </fieldset>
                  )
                }
                <fieldset className="form-group">
                  <input
                    name="email"
                    type="email" 
                    className="form-control form-control-lg" 
                    placeholder="Email"
                    onChange={(e) => setEmail(e.target.value)}
                  />
                </fieldset>
                <fieldset className="form-group">
                  <input
                    name="password"
                    type="password" 
                    className="form-control form-control-lg" 
                    placeholder="Password" 
                    onChange={(e) => setPassword(e.target.value)}
                  />
                </fieldset>
                <button 
                  className="btn btn-lg btn-primary pull-xs-right" 
                  disabled={isLoading}
                >
                  {pageTitle}
                </button>  
              </fieldset>
            </form>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Auth;