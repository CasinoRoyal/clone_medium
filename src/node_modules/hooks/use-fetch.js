import { useState, useEffect, useCallback } from 'react';
import axios from 'axios';

import useLocalStorage from 'hooks/use-local-storage';

export default (url) => {
  const baseUrl = 'https://conduit.productionready.io/api';
  const [response, setResponse] = useState(null);
  const [error, setError] = useState(null);
  const [options, setOptions] = useState({});
  const [isLoading, setIsLoading] = useState(false);
  const [token] = useLocalStorage('token');

  const doFetch = useCallback((options = {}) => {
    setOptions(options);
    setIsLoading(true);
  }, []);

  useEffect(() => {
    if (!isLoading) return;

    const requestOptions = {
      ...options,
      ...{
        headers: {
          authorization: token ? `Token ${token}` : ''
        }
      }
    };

    axios(`${baseUrl}/${url}`, requestOptions)
      .then((res) => {
        setResponse(res.data);
        setIsLoading(false);
      })
      .catch((err) => {
        setError(err.response.data);
        setIsLoading(false);
      })
  }, [isLoading, options, url, token]);

  return [{isLoading, response, error}, doFetch];
}